import { MyContext } from "../../../types";
import { handleMenuSection } from "../../createFunctions/handleMenuSection";
import { createReplyKeyboard } from "../../keyboards/createKeyboard";

export async function handlerMainMenu(ctx: MyContext) {
  if (ctx.session.isAdmin) {
    const keyboardMenuAdmin = await createReplyKeyboard(
      ctx,
      "keyboardMenuAdmin"
    );
    if (keyboardMenuAdmin) {
      await handleMenuSection(ctx, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè°", keyboardMenuAdmin, "menu");
    } else {
      console.error("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞.");
      await ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
    }
    return;
  }
  const keyboardMenu = await createReplyKeyboard(ctx, "keyboardMenu");
  if (keyboardMenu) {
    await handleMenuSection(ctx, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè°", keyboardMenu, "menu");
  } else {
    console.error("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–∞.");
    await ctx.reply(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    );
  }
}
