import { MyContext } from "../../../types";
import { handleMenuSection } from "../../createFunctions/handleMenuSection";
import { createSimpleReplyKeyboard } from "../../keyboards/createKeyboard";
import { simpleKeyboards } from "../../keyboards/keyboardsSimple";

export async function handlerAccoutn(ctx: MyContext) {
  const firstName = ctx.from?.first_name;
  const id = ctx.from?.id;
  const keyboardAccount = await createSimpleReplyKeyboard(
    ctx,
    simpleKeyboards.KEYBOARD_ACCOUNT
  );
  if (keyboardAccount) {
    await handleMenuSection(
      ctx,
      "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüîê",
      keyboardAccount /*"account"*/
    );
    if (ctx.session.adress && ctx.session.phone) {
      await ctx.reply(
        `${firstName}\n\n–í–∞—à ID: ${id}\n\n‚òéÔ∏è–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${ctx.session.phone}\n\nüè†–í–∞—à –∞–¥—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${ctx.session.adress}\n\n–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–π–¥—è –≤ —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é:`
      );
    } else {
      await ctx.reply(
        `${firstName}\n\n–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–µ—Ä–µ–π–¥—è –≤ —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é:`
      );
    }
  } else {
    console.error(
      `–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞. keyboardAccount = ${keyboardAccount}`
    );
    await ctx.reply(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    );
  }
}
