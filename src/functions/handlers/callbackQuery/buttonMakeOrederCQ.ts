import { bot } from "../../..";
import { MyContext } from "../../../types";
import {
  createInlineKeyboard,
  createReplyKeyboard,
} from "../../keyboards/createKeyboard";
import { createInlineMenu } from "../../createFunctions/createInlineMenu";
import { handleMenuSection } from "../../createFunctions/handleMenuSection";
import { menus } from "../../../menus/menus";
import { cartRender } from "../../menu-renders/cartRender";

export async function isNotRegisted(ctx: MyContext) {
  const menu = menus["notRegistered"];
  const keyboard = await createInlineKeyboard(menu.buttons);
  if (!ctx.session.phone || !ctx.session.adress) {
    if (!ctx.session.phone && !ctx.session.adress) {
      const message = await ctx.editMessageText(
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ.",
        { reply_markup: keyboard }
      );
    } else if (!ctx.session.phone) {
      const message = await ctx.editMessageText(
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω.",
        { reply_markup: keyboard }
      );
    } else if (!ctx.session.adress) {
      const message = await ctx.editMessageText(
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏.",
        { reply_markup: keyboard }
      );
    }

    return true; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
  }
  return false; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
}

export async function buttonMakeOrederCQ(ctx: MyContext) {
  if (await isNotRegisted(ctx)) {
    return;
  }
  if (ctx.session.cart.length < 1) {
    await ctx.editMessageText(
      `–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã 1 —Ç–æ–≤–∞—Ä: `
    );
    await cartRender(ctx);
    return;
  }
  if (ctx.callbackQuery) {
    let userId = ctx.callbackQuery.from.id;
    const orderId = Date.now().toString(16);
    const orderTime = Date.now().toString();

    const messageOrderToAdmin = `
üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:
${ctx.session.cart
  .map((e, i) => `${i + 1}. ${e.name} x${e.amounth} - ${e.price * e.amounth}‚ÇΩ`)
  .join("\n")}
–ò—Ç–æ–≥–æ: ${ctx.session.totalRub}‚ÇΩ

üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${ctx.session.phone}
üè† –ê–¥—Ä–µ—Å: ${ctx.session.adress}
–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑: ${orderId}
`;
    const messageOrderToUser = `
üì¶ –í–∞—à –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–ª–µ–Ω:
${ctx.session.cart
  .map((e, i) => `${i + 1}. ${e.name} x${e.amounth} - ${e.price * e.amounth}‚ÇΩ`)
  .join("\n")}
–ò—Ç–æ–≥–æ: ${ctx.session.totalRub}‚ÇΩ
–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑: ${orderId}
`;
    const orderText = `
üì¶ –í–∞—à –∑–∞–∫–∞–∑:
${ctx.session.cart
  .map((e, i) => `${i + 1}. ${e.name} x${e.amounth} - ${e.price * e.amounth}‚ÇΩ`)
  .join("\n")}
–ò—Ç–æ–≥–æ: ${ctx.session.totalRub}‚ÇΩ
–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑: ${orderId}
–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: ${orderTime}
–°—Ç–∞—Ç—É—Å: <–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ>
`;

    ctx.session.orders.push({ id: orderId, text: orderText, date: orderTime });
    await bot.api.sendMessage(userId, messageOrderToUser);
    const adminId = process.env.ADMIN_ID;

    if (adminId) {
      try {
        await bot.api.sendMessage(adminId, messageOrderToAdmin);
      } catch (error) {
        console.error(
          "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –∑–∞–∫–∞–∑–µ:",
          error
        );
      }
    } else {
      console.error(
        "–û—à–∏–±–∫–∞: ADMIN_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
      );
      await ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
      );
    }
  }

  ctx.session.cart = []; // –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
  ctx.session.totalRub = 0; // –æ—á–∏—â–∞–µ–º —Ç–æ—Ç–∞–ª –ø—Ä–∞–π—Å
  if (ctx.chat?.id && ctx.session.messagesAddToCart) {
    await ctx.api.deleteMessages(ctx.chat.id, ctx.session.messagesAddToCart);
  }
  await cartRender(ctx);
}
