import { MyContext } from "../../types";
import { createReplyKeyboard } from "../keyboards/createKeyboard";
import { isAdmin } from "../admin/isAdmin";

export async function mainMenuRender(ctx: MyContext, userID?: number) {
  if (userID) {
    await isAdmin(ctx, userID);
  }
  try {
    const keyboardMenu = await createReplyKeyboard(ctx, "keyboardMenu");
    const keyboardMenuAdmin = await createReplyKeyboard(
      ctx,
      "keyboardMenuAdmin"
    );
    const isAdminFlag = ctx.session.isAdmin;
    const message =
      "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–°—Ç–∞–∫–∞–Ω—á–∏–∫ –ë–æ—Ç–∞</b>, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑ \n\nüìç–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ö–∞—Ç–∞–ª–æ–≥üìï\n\nüìç–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ \n–æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –î–æ—Å—Ç–∞–≤–∫–∞üõµ\n\n‚ùï–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüîê";

    if (keyboardMenuAdmin && isAdminFlag && keyboardMenu) {
      ctx.session.keyboardHistory.push(keyboardMenuAdmin);
      ctx.session.menuHistory.push("menu");
      await ctx.reply(message, {
        reply_markup: keyboardMenuAdmin,
        parse_mode: "HTML",
      });
    } else if (keyboardMenu) {
      ctx.session.keyboardHistory.push(keyboardMenu);
      ctx.session.menuHistory.push("menu");
      await ctx.reply(message, {
        reply_markup: keyboardMenu,
        parse_mode: "HTML",
      });
    } else {
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã");
    }
  } catch (error) {
    console.log(error);
  }
}
